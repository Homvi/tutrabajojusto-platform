{
    "$schema": "https://getcomposer.org/schema.json",
    "name": "laravel/laravel",
    "type": "project",
    "description": "The skeleton application for the Laravel framework.",
    "keywords": [
        "laravel",
        "framework"
    ],
    "license": "MIT",
    "require": {
        "php": "^8.2",
        "inertiajs/inertia-laravel": "^2.0",
        "laravel/framework": "^12.0",
        "laravel/sanctum": "^4.0",
        "laravel/tinker": "^2.10.1",
        "tightenco/ziggy": "^2.0"
    },
    "require-dev": {
        "fakerphp/faker": "^1.23",
        "laravel-lang/lang": "^12.17",
        "laravel/breeze": "^2.3",
        "laravel/pail": "^1.2.2",
        "laravel/pint": "^1.13",
        "laravel/sail": "^1.41",
        "mockery/mockery": "^1.6",
        "nunomaduro/collision": "^8.6",
        "pestphp/pest": "^3.8",
        "pestphp/pest-plugin-laravel": "^3.2",
        "larastan/larastan": "^3.0"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "post-update-cmd": [
            "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi",
            "@php -r \"file_exists('database/database.sqlite') || touch('database/database.sqlite');\"",
            "@php artisan migrate --graceful --ansi"
        ],
        "generate:routes": [
            "@php artisan ziggy:generate --types"
        ],
        "routes:check": [
            "@php artisan ziggy:generate --types",
            "npx tsc --noEmit"
        ],
        "routes:watch": [
            "echo 'üîÑ Starting route watcher...'",
            "npx concurrently \"@php artisan ziggy:generate --types\" \"npx chokidar 'routes/**/*.php' -c 'php artisan ziggy:generate --types'\""
        ],
        "dev": [
            "Composer\\Config::disableProcessTimeout",
            "npx concurrently -c \"#93c5fd,#c4b5fd,#fb7185,#fdba74,#10b981\" \"php artisan serve\" \"php artisan queue:listen --tries=1\" \"php artisan pail --timeout=0\" \"npm run dev\" \"npx chokidar 'routes/**/*.php' -c 'php artisan ziggy:generate --types'\" --names=server,queue,logs,vite,routes"
        ],
        "test": [
            "@php artisan config:clear --ansi",
            "@php artisan test"
        ],
        "test:pest": [
            "@php artisan config:clear --ansi",
            "./vendor/bin/pest"
        ],
        "test:pest:coverage": [
            "@php artisan config:clear --ansi",
            "php -d xdebug.mode=coverage ./vendor/bin/pest --coverage"
        ],
        "analyse": [
            "Composer\\Config::disableProcessTimeout",
            "php -d memory_limit=1G vendor/bin/phpstan analyse --ansi --configuration=phpstan.neon.dist"
        ],
        "format": [
            "./vendor/bin/pint --test"
        ],
        "format:fix": [
            "./vendor/bin/pint"
        ],
        "prepare": [
            "echo 'üõ£Ô∏è  Generating typed routes...'",
            "@composer generate:routes",
            "echo 'üîß Fixing code formatting...'",
            "@composer format:fix",
            "echo 'üîç Running PHPStan analysis...'",
            "@composer analyse",
            "echo 'üß™ Running PHP tests...'",
            "@composer test",
            "echo 'üìù Running ESLint...'",
            "npm run lint",
            "echo 'üîç Running TypeScript check...'",
            "npx tsc --noEmit",
            "echo '‚úÖ All checks completed successfully! Ready for pull request.'"
        ]
    },
    "extra": {
        "laravel": {
            "dont-discover": []
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "pestphp/pest-plugin": true,
            "php-http/discovery": true
        }
    },
    "minimum-stability": "stable",
    "prefer-stable": true
}